<script src="config/configTablesCrud.js"></script>
<script>
  $(document).ready(function () {
    /****  Config DataTable ****/
    const config = configDataTable({ subdomain: '{{tenant.fallback_subdomain}}', service: 'customer' });
    const table = $("#table-customers").DataTable({
      ...config,
      columns: [
        { data: "name" },
        { data: "email" },
        { data: "personal_document" },
        { data: "" },
        { data: "" }
      ],
      columnDefs: [
        {
          targets: -1,
          data: "id",
          defaultContent: columnAction
        },
        {
          targets: -2,
          data: "id",
          defaultContent: "<button type=\"button\" class=\"address mr-3 btn btn-block btn-sm btn-outline-success\" disabled data-toggle=\"modal\" data-target=\"#modal-secondary\" >Ver!</button>"
        }
      ]
    });
    /****  /Config DataTable ****/

    /********* Insert Customer ***********/
    modalInsert('newCustomer');
    inputFocus('nameCustomer');

    $('#newCustomer').validate(
      {
        submitHandler: function (form) {
          console.log('apertei')
          $.ajax({
            url: "http://admin.super-store.test:3000/customer",
            type: "POST",
            data: $(form).serialize(),
            headers: "contentType: \"application/json\"",
            success: function (response) {
              table.ajax.reload();
              $('#modal-primary').modal('hide');
              Toast.fire({
                icon: 'success',
                title: 'Cliente criado com sucesso!'
              })
            },
            error: function (err) {
              $('#modal-primary').modal('hide');
              Toast.fire({
                icon: 'error',
                title: 'Erro ao criar o cliente!'
              })
            }
          });
        },
        rules: {
          name: {
            required: true,
          },
          personal_document: {
            required: true
          },
          email: {
            required: true,
          },
          zip_code: {
            required: true,
          },
          street: {
            required: true,
          },
          street_number: {
            required: true,
          },
          street_complement: {
            required: false,
          },
          neighborhood: {
            required: true
          },
          city: {
            required: true,
          },
          state: {
            required: true,
          },
          ddd: {
            required: true,
          },
          phone: {
            required: true,
          },
        },
        messages: {
          name: {
            required: "",
          },
          personal_document: {
            required: ""
          },
          email: {
            required: "",
          },
          zip_code: {
            required: "",
          },
          street: {
            required: "",
          },
          street_number: {
            required: "",
          },
          street_complement: {
            required: false,
          },
          neighborhood: {
            required: ""
          },
          city: {
            required: "",
          },
          state: {
            required: "",
          },
          ddd: {
            required: "",
          },
          phone: {
            required: "",
          },
        },
        errorElement: 'span',
        errorPlacement: function (error, element) {
          error.addClass('invalid-feedback');
          element.closest('.form-group').append(error);
        },
        highlight: function (element, errorClass, validClass) {
          $(element).addClass('is-invalid');
        },
        unhighlight: function (element, errorClass, validClass) {
          $(element).removeClass('is-invalid');
        }
      });
    /********* /Insert Customer ***********/
    /********* Edit Customer ***********/
    $('#editCustomer').validate(
      {
        submitHandler: function (form) {
          let params = {}
          $(form).serializeArray().forEach(item => {
            params[item.name] = item.value;
          })

          $.ajax({
            url: "http://{{tenant.fallback_subdomain}}.super-store.test:3000/customer/" + params.id,
            type: "PUT",
            data: params,
            headers: "contentType: \"application/json\"",
            success: function (response) {
              table.ajax.reload();
              $('#modal-secondary').modal('hide');
              Toast.fire({
                icon: 'success',
                title: 'Cliente editado com sucesso!'
              })
            },
            error: function (error) {
              $('#modal-secondary').modal('hide');
              Toast.fire({
                icon: 'error',
                title: 'Erro ao editar cliente!'
              })
            }
          })
        },
        rules: {
          name: {
            required: true,
          },
          personal_document: {
            required: true
          },
          email: {
            required: true,
          }
        },
        messages: {
          name: {
            required: "",
          },
          personal_document: {
            required: ""
          },
          email: {
            required: "",
          }
        },
        errorElement: 'span',
        errorPlacement: function (error, element) {
          error.addClass('invalid-feedback');
          element.closest('.form-group').append(error);
        },
        highlight: function (element, errorClass, validClass) {
          $(element).addClass('is-invalid');
        },
        unhighlight: function (element, errorClass, validClass) {
          $(element).removeClass('is-invalid');
        }
      });

    $('#modal-secondary').on('show.bs.modal', function (event) {
      let button = event.relatedTarget.parentElement.parentElement;
      let line = table.row(button);
      const customer = line.data();
      $("#editCustomer input").each((index, element) => {
        element.value = customer[element.name] || customer.addresses[0][element.name] || "";
      })
    });
    /********* /Edit Customer ***********/
    /********* Delete Customer ***********/
    $('#modal-danger').on('show.bs.modal', function (event) {
      const botao = event.relatedTarget.parentElement.parentElement;
      let line = table.row(botao);
      const customer = line.data();
      const modal = $(this);
      modal.find('.modal-body p').text('Você têm certeza que deseja excluir o cliente: ' + customer.name + '?');

      const buttonDelete = modal.find('#modalDelete');
      buttonDelete.attr("value", customer.id)
      buttonDelete.click(function (e) {
        const id = e.target.value;
        $.ajax({
          url: "http://{{tenant.fallback_subdomain}}.super-store.test:3000/customer/" + id,
          type: "DELETE",
          headers: "contentType: \"application/json\"",
          success: function (response) {
            table.ajax.reload();
            Toast.fire({
              icon: 'success',
              title: 'Cliente removido com sucesso!'
            })
          },
          error: function (err) {
            Toast.fire({
              icon: 'error',
              title: 'Erro ao remover o cliente!'
            })
          }
        })
      })
    });
    /********* Delete Customer ***********/


  })


</script>